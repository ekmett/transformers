name:         transformers
version:      0.2.2.0
license:      BSD3
license-file: LICENSE
author:       Andy Gill, Ross Paterson
maintainer:   Ross Paterson <ross@soi.city.ac.uk>
category:     Control
synopsis:     Concrete functor and monad transformers
description:
    Haskell 98 part of a monad transformer library, inspired by the paper
    \"Functional Programming with Overloading and Higher-Order Polymorphism\",
    by Mark P Jones, in /Advanced School of Functional Programming/, 1995
    (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).
    .
    This part contains the monad transformer class, the concrete monad
    transformers, operations and liftings.  It can be used on its own
    in Haskell 98 code, or with the monad classes in the @monads-fd@ or
    @monads-tf@ packages, which automatically lift operations introduced
    by monad transformers through other transformers.
build-type: Simple
cabal-version: >= 1.5.5

flag ApplicativeInBase
  description: Choose the newer base package, including Applicative and other
    Functor classes.

library
  if flag(ApplicativeInBase)
    build-depends: base >= 2 && < 6
  else
    build-depends: base >= 1.0 && < 2, special-functors >=1.0 && <1.1
  exposed-modules:
    Control.Monad.IO.Class
    Control.Monad.Trans.Class
    Control.Monad.Trans.Cont
    Control.Monad.Trans.Error
    Control.Monad.Trans.Identity
    Control.Monad.Trans.List
    Control.Monad.Trans.Maybe
    Control.Monad.Trans.Reader
    Control.Monad.Trans.RWS
    Control.Monad.Trans.RWS.Lazy
    Control.Monad.Trans.RWS.Strict
    Control.Monad.Trans.State
    Control.Monad.Trans.State.Lazy
    Control.Monad.Trans.State.Strict
    Control.Monad.Trans.Writer
    Control.Monad.Trans.Writer.Lazy
    Control.Monad.Trans.Writer.Strict
    Data.Functor.Compose
    Data.Functor.Constant
    Data.Functor.Identity
    Data.Functor.Product
